#!/usr/bin/env bash

session="H"

if tmux has-session -t ${session} 2>/dev/null; then
    tmux new-window -t ${session} -n 'is' -c '/mnt/is/pobrane'
else
    if [[ -n "${TMUX}" ]]; then
        # needed so it won't trigger error: sessions should be nested with care, unset $TMUX to force
        TMUX= tmux new-session -d -s ${session} -n 'is'
        tmux switch-client -t ${session}
    else
        tmux new-session -d -s H -n 'is'
    fi
    [[ -z "${TMUX}" ]] && tmux send-keys 'cd /mnt/is/pobrane' Enter
fi


# is
tmux send-keys -t ${session} 'sshfs is: /mnt/is; cd pobrane' Enter
tmux send-keys -t ${session} 'ranger' Enter
tmux split-window -t ${session} -v -p 50 -c '/mnt/win_d/filmy/_watch_first_1'
tmux send-keys -t ${session} 'ranger' Enter
tmux split-window -t ${session} -h -p 50 -c '/mnt/win_d/filmy/_watch_first_1'
tmux send-keys -t ${session} 'ranger-cd' Enter

# dotfile
tmux new-window -t ${session} -n 'dotfiles' -c '~/.dotfiles'
tmux send-keys -t ${session} 'ranger' Enter
tmux split-window -t ${session} -h -p 50 -c '~/.dotfiles'
tmux send-keys -t ${session} 'git status' Enter
tmux send-keys -t ${session} 'git remote show origin' Enter
tmux send-keys -t ${session} 'git branch -avv' Enter
tmux send-keys -t ${session} 'git pull'

# # english
tmux new-window -t ${session} -n 'english' -c '~/Downloads/en'
tmux send-keys -t ${session} 'gn edit 2' Enter
tmux split-window -t ${session} -h -p 50 -c '~/Downloads/en'
tmux send-keys -t ${session} 'gn show 2 | tee eng_$(date +"%y%m%d_%H%M%S") | checkeng' Enter

# # tmp
tmux new-window -t ${session} -n 'tmp' -c '~/Downloads'
tmux send-keys -t ${session} 'ranger-cd' Enter

# # last
# tmux refresh-client
if [[ -n "$TMUX" ]]; then
    tmux switch-client -t ${session}
else
    tmux attach-session -t ${session}
fi
tmux select-window -t ${session}:dotfiles
