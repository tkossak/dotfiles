#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

# -------------------------------------------------------------------------------
# GLOBAL VARS/CONSTANTS

# Example link: /usr/bin/link.sh
# to example file: /home/user/bin/file.abc

# ie: /usr/bin
# __dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# ie: /usr/bin/link.sh
# __file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
# ie: link.sh
__base="$(basename "${BASH_SOURCE[0]}")"
# ie: /usr
# __root="$(cd "$(dirname "${__dir}")" && pwd)"

# magic variables for links
# ie: /home/user/bin/file.abc
# __sfile="$(readlink -f ${BASH_SOURCE[0]})"
# ie: /home/user/bin
# __sdir="$(cd "$(dirname "${__sfile}")" && pwd)"


__arg1="${1:-}"


# -------------------------------------------------------------------------------
# PRINT_HELP()
print_help()
{
    echo "Usage:"
    echo "${__base} [OPTIONS]"
    echo
    echo "OPTIONS:"
    echo "  -l  :: break links"
    return 0
}


# --------------------------------------------------------------------------------
# --------------------------------------------------------------------------------
# --------------------------------------------------------------------------------
# test_func1 [OPTIONS]
# OPTIONS
#   -.  :: ......
loguj()
{
    local var="${1:-}"

    # option parsing:
    while [[ $# > 0 ]]; do
        case "$1" in
            -c)
                shift
                ;;
            -h|--help)
                print_help
                exit 0
                ;;
            *)
                if [[ -z "${src_file}" ]]; then
                    src_file="$1"
                elif [[ -z "${dst_link}" ]]; then
                    dst_link="$1"
                else
                    echo "ERROR: Unknown option: ${1}"
                    return 1
                fi
                shift
        esac
    done

    # ........................................

    return 0
}


# ================================================================================
# ================================================================================
# ================================================================================
# MAIN SCRIPT
if [[ $# = 0 ]]; then
    print_help
    exit 0
fi

# OPTION parsing 1
    while [[ $# > 0 ]]; do
        case "$1" in
            -c)
                shift
                ;;
            -h|--help)
                print_help
                exit 0
                ;;
            *)
                if [[ -z "${src_file}" ]]; then
                    src_file="$1"
                elif [[ -z "${dst_link}" ]]; then
                    dst_link="$1"
                else
                    echo "ERROR: Unknown option: ${1}"
                    exit 1
                fi
                shift
        esac
    done

# OPTION parsing 2

    while getopts ":ab:" opt; do
        case $opt in
            a)
                echo "-a was triggered!"
                ;;
            b)
                echo "-b was triggered with argument: ${OPTARG}"
                ;;
            \?)
                echo "Invalid option: -${OPTARG}"
                exit 1
                ;;
            :)
                echo "Option -${OPTARG} requires an argument."
                exit 1
                ;;
        esac
    done

    shift $((OPTIND-1))
    echo "echo all: $@"

# -------------------------------------------------------------------

exit 0

