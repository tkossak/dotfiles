#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

# Set magic variables for current file & dir
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
# __base="$(basename ${__file} .sh)"
# __root="$(cd "$(dirname "${__dir}")" && pwd)"

# magic variables for links
#__file="$(readlink -f ${BASH_SOURCE[0]})"
#__dir="$(cd "$(dirname "${__file}")" && pwd)"

# arg1="${1:-}"


aptget()
{
    local instal_cmd=""
    # local app_install="${1:-}"
    local app_install="${1:?Error. \$1 not set}"
    local app_run="${2:-${1}}"

    # check if app is installed
    if hash ${app_run} 2>/dev/null; then
        echo "${app_run} already installed."
        return 0
    fi

    # build instal command
    # add sudo
    if hash sudo 2>/dev/null; then
        instal_cmd="${instal_cmd}sudo "
    fi

    # add apt-get
    if hash apt-get 2>/dev/null; then
        instal_cmd="${instal_cmd}apt-get install -qyf "
    else
        echo "Error: no apt-get tool?"
        return 1
    fi

    instal_cmd="${instal_cmd}${app_install}"
    echo "---${instal_cmd}---"
    ${instal_cmd}
}

# echo -n "Instal os apps (y/n)? "
# read cont
# if [[ ${cont} != "y" && ${cont} != "Y" ]]; then
#     echo "Exiting..."
#     exit 1
# fi;

./break_links
mkdir -p ~/apps

aptget git
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
aptget python-pip pip
aptget python3-pip pip3

# Ranger
git clone https://github.com/hut/ranger.git ~/apps/ranger && cd $_; make install;
ranger --copy-config=all

# TMUX
aptget tmux


git clone https://github.com/clvv/fasd.git ~/apps/fasd
sudo make ~/apps/fasd/install;

